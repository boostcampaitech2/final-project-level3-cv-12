{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx\";\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction Buttons({\n  canvasRef,\n  eyeL,\n  eyeR,\n  nose,\n  mouth,\n  other,\n  drawingstate,\n  undoSteps,\n  redoSteps,\n  undo,\n  redo,\n  brushsize,\n  erasersize,\n  setBrushsize,\n  setErasersize,\n  setDrawingstate,\n  setUndoSteps,\n  setRedoSteps,\n  setUndo,\n  setRedo\n}) {\n  // Convert Button\n  // const convertCanvas = () => {\n  // \tif (!canvasRef.current) {\n  // \t\treturn;\n  // \t}\n  // \tconst dataURL:string = canvasRef.current.toDataURL(\"image/png\");\n  // }\n  const handleBrush = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    setBrushsize(+size);\n  };\n\n  const handleEraser = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    setErasersize(+size);\n  };\n\n  const modeChange = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    setDrawingstate(!drawingstate);\n  };\n\n  const clearCanvas = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n  }; // Realtime Button\n\n\n  const undoLastOperation = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (!ctx) {\n      return;\n    }\n\n    if (undo > 0) {\n      const data = undoSteps[undo];\n      ctx.strokeStyle = \"white\";\n      ctx.beginPath();\n      ctx.lineWidth = 5;\n      ctx.moveTo(data.x, data.y);\n      data.forEach((item, index) => {\n        if (index !== 0) {\n          ctx.lineTo(item.x, item.y);\n          ctx.stroke();\n        }\n      });\n      ctx.closePath();\n      ctx.strokeStyle = \"black\";\n      const temp = { ...undoSteps,\n        [undo]: []\n      };\n      const te = { ...redoStep,\n        [redo + 1]: [...data]\n      };\n      setUndo(undo - 1);\n      setRedo(redo + 1);\n      setRedoStep(te);\n      setUndoSteps(temp);\n    }\n  };\n\n  const redoLastOperation = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (!ctx) {\n      return;\n    }\n\n    if (redo > 0) {\n      const data = redoSteps[redo];\n      ctx.strokeStyle = \"black\";\n      ctx.beginPath();\n      ctx.lineWidth = 5;\n      ctx.moveTo(data.x, data.y);\n      data.forEach((item, index) => {\n        if (index !== 0) {\n          ctx.lineTo(item.x, item.y);\n          ctx.stroke();\n        }\n      });\n      ctx.closePath();\n      const temp = { ...redoStep,\n        [redo]: []\n      };\n      setUndo(undo + 1);\n      setRedo(redo - 1);\n      setRedoStep(temp);\n      setUndoSteps({ ...undoSteps,\n        [undo + 1]: [...data]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Brush size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"paintRange\",\n        min: \"0.1\",\n        max: \"10\",\n        value: brushsize,\n        step: \"0.1\",\n        onChange: handleBrush\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Paint size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"eraseRange\",\n        min: \"0.1\",\n        max: \"10\",\n        value: erasersize,\n        step: \"0.1\",\n        onChange: handleEraser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: clearCanvas,\n        children: \"Real Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: clearCanvas,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: modeChange,\n        children: drawingstate ? \"BRUSH\" : \"ERASER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: clearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: undohandling,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-current w-4 h-4 mr-2\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 20 20\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 104\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx"],"names":["Buttons","canvasRef","eyeL","eyeR","nose","mouth","other","drawingstate","undoSteps","redoSteps","undo","redo","brushsize","erasersize","setBrushsize","setErasersize","setDrawingstate","setUndoSteps","setRedoSteps","setUndo","setRedo","handleBrush","event","current","size","target","value","handleEraser","modeChange","clearCanvas","canvas","getContext","clearRect","width","height","undoLastOperation","ctx","data","strokeStyle","beginPath","lineWidth","moveTo","x","y","forEach","item","index","lineTo","stroke","closePath","temp","te","redoStep","setRedoStep","redoLastOperation","undohandling"],"mappings":"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","sourcesContent":["import '../styles/styles.css';\n\ninterface Coordinate {\n\tx: number;\n\ty: number;\n};\n\ninterface InputProps {\n\tcanvasRef: React.RefObject<HTMLCanvasElement>;\n\teyeL: number;\n\teyeR: number;\n\tnose: number;\n\tmouth: number;\n\tother: number;\n\tdrawingstate: Boolean;\n\tbrushsize: number;\n\terasersize: number;\n\tsetBrushsize: React.Dispatch<React.SetStateAction<number>>;\n\tsetErasersize: React.Dispatch<React.SetStateAction<number>>;\n\tsetDrawingstate: React.Dispatch<React.SetStateAction<Boolean>>;\n\tundoSteps: Array<Coordinate>;\n\tredoSteps: Array<Coordinate>;\n\tundo: number;\n\tredo: number;\n\tsetUndoSteps: React.Dispatch<React.SetStateAction<Array<Coordinate>>>;\n\tsetRedoSteps: React.Dispatch<React.SetStateAction<Array<Coordinate>>>;\n\tsetUndo: React.Dispatch<React.SetStateAction<number>>;\n\tsetRedo: React.Dispatch<React.SetStateAction<number>>;\n}\n\n\nfunction Buttons({canvasRef, eyeL, eyeR, nose, mouth, other, drawingstate, undoSteps, redoSteps, undo, redo,\n\tbrushsize, erasersize, setBrushsize, setErasersize, setDrawingstate, setUndoSteps, setRedoSteps, setUndo, setRedo} : InputProps) {\n\n\t// Convert Button\n\t// const convertCanvas = () => {\n\t// \tif (!canvasRef.current) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst dataURL:string = canvasRef.current.toDataURL(\"image/png\");\n\t// }\n\n\tconst handleBrush = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst size:string = event.target.value;\n\t\tsetBrushsize(+size);\n\t}\n\tconst handleEraser = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst size:string = event.target.value;\n\t\tsetErasersize(+size);\n\t}\n\n\tconst modeChange = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tsetDrawingstate(!drawingstate);\n\t}\n\n\tconst clearCanvas = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst canvas: HTMLCanvasElement = canvasRef.current;\n\t\tcanvas.getContext('2d')!!.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t// Realtime Button\n\n\tconst undoLastOperation = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst ctx: CanvasRenderingContext2D |null = canvasRef.current.getContext('2d');\n\t\tif (!ctx) { return; }\n\t\tif (undo > 0) {\n\t\t  const data = undoSteps[undo];\n\t\t  ctx.strokeStyle = \"white\";\n\t\t  ctx.beginPath();\n\t\t  ctx.lineWidth = 5;\n\t\t  ctx.moveTo(data.x, data.y);\n\t\t  data.forEach((item, index) => {\n\t\t\tif (index !== 0) {\n\t\t\t  ctx.lineTo(item.x, item.y);\n\t\t\t  ctx.stroke();\n\t\t\t}\n\t\t  });\n\t\t  ctx.closePath();\n\t\t  ctx.strokeStyle = \"black\";\n\t\t  const temp = {\n\t\t\t...undoSteps,\n\t\t\t[undo]: []\n\t\t  };\n\t\t  const te = {\n\t\t\t...redoStep,\n\t\t\t[redo + 1]: [...data]\n\t\t  };\n\t\t  setUndo(undo - 1);\n\t\t  setRedo(redo + 1);\n\t\t  setRedoStep(te);\n\t\t  setUndoSteps(temp);\n\t\t}\n\t  };\n\n\t  const redoLastOperation = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst ctx: CanvasRenderingContext2D |null = canvasRef.current.getContext('2d');\n\t\tif (!ctx) { return; }\n\t\tif (redo > 0) {\n\t\t  const data = redoSteps[redo];\n\t\t  ctx.strokeStyle = \"black\";\n\t\t  ctx.beginPath();\n\t\t  ctx.lineWidth = 5;\n\t\t  ctx.moveTo(data.x, data.y);\n\t\t  data.forEach((item, index) => {\n\t\t\tif (index !== 0) {\n\t\t\t  ctx.lineTo(item.x, item.y);\n\t\t\t  ctx.stroke();\n\t\t\t}\n\t\t  });\n\t\t  ctx.closePath();\n\t\t  const temp = {\n\t\t\t...redoStep,\n\t\t\t[redo]: []\n\t\t  };\n\t\t  setUndo(undo + 1);\n\t\t  setRedo(redo - 1);\n\t\t  setRedoStep(temp);\n\t\t  setUndoSteps({\n\t\t\t...undoSteps,\n\t\t\t[undo + 1]: [...data]\n\t\t  });\n\t\t}\n\t  };\n\n\treturn (\n\t\t<div className='Buttons1'>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<span> Brush size : </span>\n\t\t\t\t<input type=\"range\" id=\"paintRange\" min=\"0.1\" max=\"10\" value={brushsize} step=\"0.1\" onChange={handleBrush}/>\n\t\t\t\t<span> Paint size : </span>\n\t\t\t\t<input type=\"range\" id=\"eraseRange\" min=\"0.1\" max=\"10\" value={erasersize} step=\"0.1\" onChange={handleEraser}/>\n\t\t\t</div>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\t\tReal Time\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\t\tConvert\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={modeChange}>\n\t\t\t\t\t{drawingstate ? \"BRUSH\" : \"ERASER\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\t\tClear\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={undohandling}>\n\t\t\t\tUndo\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\">\n\t\t\t\t\t<svg className=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\"/></svg>\n\t\t\t\t\t<span>Download</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx\";\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction Buttons({\n  canvasRef,\n  eyeL,\n  eyeR,\n  nose,\n  mouth,\n  other,\n  drawingstate,\n  undoSteps,\n  undo,\n  redo,\n  brushsize,\n  erasersize,\n  setBrushsize,\n  setErasersize,\n  setDrawingstate,\n  setUndo,\n  setRedo,\n  background,\n  loading,\n  setBackground,\n  setLoading,\n  realtime,\n  setRealtime,\n  fetchImage\n}) {\n  const convertCanvases = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    fetchImage();\n  };\n\n  const handleBackground = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    setBackground(!background);\n  };\n\n  const handleRealtime = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    setRealtime(!realtime);\n  };\n\n  const handleBrush = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    setBrushsize(+size);\n  };\n\n  const handleEraser = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    setErasersize(+size);\n  };\n\n  const modeChange = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    setDrawingstate(!drawingstate);\n  };\n\n  const clearCanvas = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    if (context) {\n      context.fillStyle = \"white\"; // 선 색깔\n\n      context.fillRect(0, 0, 512, 512);\n    }\n  }; // canvas에 선을 긋는 함수\n\n\n  const drawLines = record => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    if (context) {\n      if (record.c) {\n        context.strokeStyle = \"black\"; // 선 색깔\n\n        context.lineWidth = brushsize; // 선 굵기\n      } else {\n        context.strokeStyle = \"white\"; // 선 색깔\n\n        context.lineWidth = erasersize; // 선 굵기\n      }\n\n      context.beginPath();\n      context.moveTo(record.ox, record.oy);\n      context.lineTo(record.nx, record.ny);\n      context.closePath();\n      context.stroke();\n    }\n  };\n\n  const undoLastOperation = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const context = canvasRef.current.getContext('2d');\n\n    if (!context) {\n      return;\n    }\n\n    if (undo > 0) {\n      context.fillStyle = \"white\"; // 선 색깔\n\n      context.fillRect(0, 0, 512, 512);\n      const data = undoSteps[undo - 1];\n      data.forEach(record => {\n        drawLines(record);\n      });\n    }\n\n    ;\n    setUndo(undo - 1);\n    console.log(undo);\n  };\n\n  const redoLastOperation = () => {\n    return; // if (!canvasRef.current) { return; }\n    // const context: CanvasRenderingContext2D |null = canvasRef.current.getContext('2d');\n    // if (!context) { return; }\n    // if (redo > 0) {\n    //   const data = redoSteps[redo];\n    //   context.strokeStyle = \"black\";\n    //   context.beginPath();\n    //   context.lineWidth = 5;\n    //   context.moveTo(data.x, data.y);\n    //   data.forEach((item, index) => {\n    // \tif (index !== 0) {\n    // \t  context.lineTo(item.x, item.y);\n    // \t  context.stroke();\n    // \t}\n    //   });\n    //   context.closePath();\n    //   const temp = {\n    // \t...redoStep,\n    // \t[redo]: []\n    //   };\n    //   setUndo(undo + 1);\n    //   setRedo(redo - 1);\n    //   setRedoStep(temp);\n    //   setUndoSteps({\n    // \t...undoSteps,\n    // \t[undo + 1]: [...data]\n    //   });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Background \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: background,\n        onChange: handleBackground\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Brush size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"paintRange\",\n        min: \"0.1\",\n        max: \"10\",\n        value: brushsize,\n        step: \"0.1\",\n        onChange: handleBrush\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Eraser size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"eraseRange\",\n        min: \"0.1\",\n        max: \"100\",\n        value: erasersize,\n        step: \"0.1\",\n        onChange: handleEraser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: realtime ? \"bg-blue-500 hover:bg-blue-400 border-blue-700 hover:border-blue-500 text-white font-bold py-2 px-4 border-b-4  rounded\" : \"bg-red-500 hover:bg-red-400 border-red-700 hover:border-red-500 text-white font-bold py-2 px-4 border-b-4  rounded\",\n        onClick: handleRealtime,\n        children: [\"REALTIME \", realtime ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" ON \\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" OFF\\uD83D\\uDEAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: convertCanvases,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"CONVERT \\uD83D\\uDCA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: modeChange,\n        children: drawingstate ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"BRUSH \\uD83E\\uDE84\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"ERASER \\uD83D\\uDDB1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: clearCanvas,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"CLEAR \\uD83E\\uDD61\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: undoLastOperation,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"UNDO \\u21A9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        onClick: redoLastOperation,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"REDO \\u21AA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx"],"names":["Buttons","canvasRef","eyeL","eyeR","nose","mouth","other","drawingstate","undoSteps","undo","redo","brushsize","erasersize","setBrushsize","setErasersize","setDrawingstate","setUndo","setRedo","background","loading","setBackground","setLoading","realtime","setRealtime","fetchImage","convertCanvases","current","handleBackground","event","handleRealtime","handleBrush","size","target","value","handleEraser","modeChange","clearCanvas","canvas","context","getContext","fillStyle","fillRect","drawLines","record","c","strokeStyle","lineWidth","beginPath","moveTo","ox","oy","lineTo","nx","ny","closePath","stroke","undoLastOperation","data","forEach","console","log","redoLastOperation"],"mappings":"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","sourcesContent":["import '../styles/styles.css';\n\ninterface Record {\n\tox: number;\n\toy: number;\n\tnx: number;\n\tny: number;\n\tc: boolean;\n\ts: number;\n};\n\ninterface InputProps {\n\tcanvasRef: React.RefObject<HTMLCanvasElement>;\n\teyeL: number;\n\teyeR: number;\n\tnose: number;\n\tmouth: number;\n\tother: number;\n\tdrawingstate: boolean;\n\tbrushsize: number;\n\terasersize: number;\n\tsetBrushsize: React.Dispatch<React.SetStateAction<number>>;\n\tsetErasersize: React.Dispatch<React.SetStateAction<number>>;\n\tsetDrawingstate: React.Dispatch<React.SetStateAction<boolean>>;\n\tundoSteps: Array<Array<Record>>;\n\tundo: number;\n\tredo: number;\n\tsetUndo: React.Dispatch<React.SetStateAction<number>>;\n\tsetRedo: React.Dispatch<React.SetStateAction<number>>;\n\tbackground: boolean;\n\tloading: boolean;\n\tsetBackground: React.Dispatch<React.SetStateAction<boolean>>;\n\tsetLoading: React.Dispatch<React.SetStateAction<boolean>>;\n\trealtime: boolean;\n\tsetRealtime: React.Dispatch<React.SetStateAction<boolean>>;\n\tfetchImage: () => void;\n}\n\n\nfunction Buttons({canvasRef, eyeL, eyeR, nose, mouth, other, drawingstate, undoSteps, undo, redo,\n\tbrushsize, erasersize, setBrushsize, setErasersize, setDrawingstate, setUndo, setRedo,\n\tbackground, loading, setBackground, setLoading, realtime, setRealtime, fetchImage} : InputProps) {\n\n\tconst convertCanvases = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tfetchImage();\n\t}\n\n\tconst handleBackground = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) { return; }\n\t\tsetBackground(!background);\n\t}\n\n\tconst handleRealtime = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tsetRealtime(!realtime);\n\t}\n\n\tconst handleBrush = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst size:string = event.target.value;\n\t\tsetBrushsize(+size);\n\t}\n\tconst handleEraser = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst size:string = event.target.value;\n\t\tsetErasersize(+size);\n\t}\n\tconst modeChange = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tsetDrawingstate(!drawingstate);\n\t}\n\tconst clearCanvas = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst canvas: HTMLCanvasElement = canvasRef.current;\n\n\t\tconst context = canvas.getContext('2d');\n\t\tif (context) {\n\t\t\tcontext.fillStyle = \"white\";  // 선 색깔\n\t\t\tcontext.fillRect(0, 0, 512, 512);\n\t\t}\n\t}\n\n\t// canvas에 선을 긋는 함수\n\tconst drawLines = (record: Record) => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst canvas: HTMLCanvasElement = canvasRef.current;\n\t\tconst context = canvas.getContext('2d');\n\n\t\tif (context) {\n\t\t\tif (record.c) {\n\t\t\t\tcontext.strokeStyle = \"black\";  // 선 색깔\n\t\t\t\tcontext.lineWidth = brushsize;\t\t// 선 굵기\n\t\t\t} else {\n\t\t\t\tcontext.strokeStyle = \"white\";  // 선 색깔\n\t\t\t\tcontext.lineWidth = erasersize;\t\t// 선 굵기\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(record.ox, record.oy);\n\t\t\tcontext.lineTo(record.nx, record.ny);\n\t\t\tcontext.closePath();\n\t\t\tcontext.stroke();\n\t\t}\n\t};\n\n\tconst undoLastOperation = () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tconst context: CanvasRenderingContext2D |null = canvasRef.current.getContext('2d');\n\t\tif (!context) { return; }\n\t\tif (undo > 0) {\n\t\t\tcontext.fillStyle = \"white\";  // 선 색깔\n\t\t\tcontext.fillRect(0, 0, 512, 512);\n\t\t\tconst data = undoSteps[undo - 1];\n\t\t\tdata.forEach((record) => {\n\t\t\t\tdrawLines(record);\n\t\t\t});\n\t\t};\n\t\tsetUndo(undo - 1);\n\t\tconsole.log(undo);\n\t};\n\n\tconst redoLastOperation = () => {\n\t\treturn ;\n\t\t// if (!canvasRef.current) { return; }\n\t\t// const context: CanvasRenderingContext2D |null = canvasRef.current.getContext('2d');\n\t\t// if (!context) { return; }\n\t\t// if (redo > 0) {\n\t\t//   const data = redoSteps[redo];\n\t\t//   context.strokeStyle = \"black\";\n\t\t//   context.beginPath();\n\t\t//   context.lineWidth = 5;\n\t\t//   context.moveTo(data.x, data.y);\n\t\t//   data.forEach((item, index) => {\n\t\t// \tif (index !== 0) {\n\t\t// \t  context.lineTo(item.x, item.y);\n\t\t// \t  context.stroke();\n\t\t// \t}\n\t\t//   });\n\t\t//   context.closePath();\n\t\t//   const temp = {\n\t\t// \t...redoStep,\n\t\t// \t[redo]: []\n\t\t//   };\n\t\t//   setUndo(undo + 1);\n\t\t//   setRedo(redo - 1);\n\t\t//   setRedoStep(temp);\n\t\t//   setUndoSteps({\n\t\t// \t...undoSteps,\n\t\t// \t[undo + 1]: [...data]\n\t\t//   });\n\t\t// }\n\t  };\n\n\treturn (\n\t\t<div className='Buttons1'>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<span> Background </span>\n\t\t\t\t<input type=\"checkbox\" checked={background} onChange={handleBackground}></input>\n\t\t\t\t<span> Brush size : </span>\n\t\t\t\t<input type=\"range\" id=\"paintRange\" min=\"0.1\" max=\"10\" value={brushsize} step=\"0.1\" onChange={handleBrush}/>\n\t\t\t\t<span> Eraser size : </span>\n\t\t\t\t<input type=\"range\" id=\"eraseRange\" min=\"0.1\" max=\"100\" value={erasersize} step=\"0.1\" onChange={handleEraser}/>\n\t\t\t</div>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<button className={(realtime ? \"bg-blue-500 hover:bg-blue-400 border-blue-700 hover:border-blue-500 text-white font-bold py-2 px-4 border-b-4  rounded\" : \"bg-red-500 hover:bg-red-400 border-red-700 hover:border-red-500 text-white font-bold py-2 px-4 border-b-4  rounded\")} onClick={handleRealtime}>\n\t\t\t\tREALTIME { realtime ? <div> ON ✅</div>  : <div> OFF🚫</div>}\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={convertCanvases}>\n\t\t\t\t <div>CONVERT 💣</div>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={modeChange}>\n\t\t\t\t\t{drawingstate ?  <div>BRUSH 🪄</div> : <div>ERASER 🖱</div>}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\t\t<div>CLEAR 🥡</div>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={undoLastOperation}>\n\t\t\t\t <div>UNDO ↩️</div>\n\t\t\t\t</button>\n\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={redoLastOperation}>\n\t\t\t\t<div>REDO ↪️</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}
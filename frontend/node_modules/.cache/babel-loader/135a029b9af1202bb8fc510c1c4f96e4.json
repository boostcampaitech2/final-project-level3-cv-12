{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyounglim/Desktop/project-canvas-frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport Canvas from './canvas/Canvas';\nimport Output from './output/Output';\nimport Buttons from './buttons/Buttons';\nimport Parameters from './buttons/Parameters';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const outputRef = useRef(null);\n  const [paramT, setParamT] = useState(0.01);\n  const [brushsize, setBrushsize] = useState(4);\n  const [erasersize, setErasersize] = useState(10);\n  const [drawingstate, setDrawingstate] = useState(true);\n  const [realtime, setRealtime] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [background, setBackground] = useState(true);\n\n  const fetchImage = async () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    if (!loading) {\n      try {\n        setLoading(true);\n        const data = await canvasRef.current.toDataURL('image/png', 1.0);\n        const bodies = await JSON.stringify({\n          \"image\": data,\n          \"T\": paramT\n        });\n        await axios.post('http://27.96.135.189:8894', bodies, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (e) {\n        setLoading(false);\n        console.log(e);\n        return;\n      }\n\n      ;\n      setLoading(false);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (!outputRef.current) {\n      return;\n    }\n\n    if (!canvasRef.current) {\n      return;\n    }\n\n    if (loading === false) {\n      const canvas = outputRef.current;\n      const context = canvas.getContext('2d');\n      let load = false;\n\n      if (context) {\n        var image = new Image();\n        image.crossOrigin = \"Anonymous\";\n        console.log('Hello');\n\n        image.onload = () => {\n          if (!context) {\n            return;\n          }\n\n          context.drawImage(image, 0, 0);\n        };\n\n        while (!load) {\n          try {\n            image.src = 'http://27.96.135.189:8894/output.png';\n            load = true;\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      }\n    } else {\n      try {\n        const data = canvasRef.current.toDataURL('image/png', 1.0);\n        const bodies = JSON.stringify({\n          \"image\": data,\n          \"T\": paramT\n        });\n        axios.post('http://27.96.135.189:8894', bodies, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (e) {\n        setLoading(false);\n        console.log(e);\n        return;\n      }\n\n      ;\n      setLoading(false);\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"h-screen bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upside\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cvcoin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          canvasRef: canvasRef,\n          drawingstate: drawingstate,\n          brushsize: brushsize,\n          erasersize: erasersize,\n          setBrushsize: setBrushsize,\n          setErasersize: setErasersize,\n          setDrawingstate: setDrawingstate,\n          realtime: realtime,\n          setRealtime: setRealtime,\n          outputRef: outputRef,\n          background: background,\n          loading: loading,\n          setBackground: setBackground,\n          setLoading: setLoading,\n          fetchImage: fetchImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Parameters, {\n          canvasRef: canvasRef,\n          paramT: paramT,\n          realtime: realtime,\n          setParamT: setParamT,\n          outputRef: outputRef,\n          fetchImage: fetchImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"downside\",\n        children: [/*#__PURE__*/_jsxDEV(Canvas, {\n          canvasRef: canvasRef,\n          drawingstate: drawingstate,\n          brushsize: brushsize,\n          erasersize: erasersize,\n          realtime: realtime,\n          background: background,\n          fetchImage: fetchImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          loading: loading,\n          outputRef: outputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"78wWUJVg+gZBX5soMxBPVDbgKKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chaeyounglim/Desktop/project-canvas-frontend/src/App.tsx"],"names":["useRef","useState","useEffect","Canvas","Output","Buttons","Parameters","axios","App","canvasRef","outputRef","paramT","setParamT","brushsize","setBrushsize","erasersize","setErasersize","drawingstate","setDrawingstate","realtime","setRealtime","loading","setLoading","background","setBackground","fetchImage","current","data","toDataURL","bodies","JSON","stringify","post","headers","e","console","log","canvas","context","getContext","load","image","Image","crossOrigin","onload","drawImage","src"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport Canvas from './canvas/Canvas';\nimport Output from './output/Output';\nimport Buttons from './buttons/Buttons';\nimport Parameters from './buttons/Parameters';\nimport axios from 'axios';\n\nfunction App() {\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\n\tconst outputRef = useRef<HTMLCanvasElement>(null);\n\tconst [paramT, setParamT] = useState<number>(0.01);\n\tconst [brushsize, setBrushsize] = useState<number>(4);\n\tconst [erasersize, setErasersize] = useState<number>(10);\n\tconst [drawingstate, setDrawingstate] = useState<boolean>(true);\n\n\tconst [realtime, setRealtime] = useState<boolean>(true);\n\tconst [loading, setLoading] = useState<boolean>(false);\n\tconst [background, setBackground] = useState<boolean>(true);\n\n\tconst fetchImage = async () => {\n\t\tif (!canvasRef.current) { return; }\n\t\tif (!loading) {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst data = await canvasRef.current.toDataURL('image/png', 1.0);\n\t\t\t\tconst bodies = await JSON.stringify({\"image\" : data, \"T\" : paramT})\n\t\t\t\tawait axios.post('http://27.96.135.189:8894', bodies, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t\t}})\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn ;\n\t\t\t};\n\t\t\tsetLoading(false);\n\t\t\treturn ;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (!outputRef.current) { return; }\n\t\tif (!canvasRef.current) { return; }\n\t\tif (loading === false) {\n\t\t\tconst canvas: HTMLCanvasElement = outputRef.current;\n\t\t\tconst context = canvas.getContext('2d');\n\t\t\tlet load = false;\n\t\t\tif (context) {\n\t\t\t\tvar image = new Image();\n\t\t\t\timage.crossOrigin = \"Anonymous\";\n\t\t\t\tconsole.log('Hello');\n\t\t\t\timage.onload = () => {\n\t\t\t\t\tif (!context) { return; }\n\t\t\t\t\tcontext.drawImage(image, 0, 0);\n\t\t\t\t};\n\t\t\t\twhile (!load) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\timage.src = 'http://27.96.135.189:8894/output.png';\n\t\t\t\t\t\tload = true;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tconst data = canvasRef.current.toDataURL('image/png', 1.0);\n\t\t\t\tconst bodies = JSON.stringify({\"image\" : data, \"T\" : paramT})\n\t\t\t\taxios.post('http://27.96.135.189:8894', bodies, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t\t}})\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn ;\n\t\t\t};\n\t\t\tsetLoading(false);\n\n\t\t}\n\t}, [loading]);\n\n\treturn (\n\t\t<body className=\"h-screen bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"upside\">\n\t\t\t\t\t<div className=\"cvcoin\"></div>\n\t\t\t\t\t<Buttons canvasRef={canvasRef}\n\t\t\t\t\tdrawingstate={drawingstate} brushsize={brushsize} erasersize={erasersize} setBrushsize={setBrushsize} setErasersize={setErasersize} setDrawingstate={setDrawingstate}\n\t\t\t\t\trealtime={realtime} setRealtime={setRealtime} outputRef={outputRef}\n\t\t\t\t\tbackground={background} loading={loading} setBackground={setBackground} setLoading={setLoading} fetchImage={fetchImage}/>\n\t\t\t\t\t<Parameters canvasRef={canvasRef} paramT={paramT} realtime={realtime}\n\t\t\t\t\tsetParamT={setParamT} outputRef={outputRef} fetchImage={fetchImage}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"downside\">\n\t\t\t\t\t<Canvas canvasRef={canvasRef}\n\t\t\t\t\tdrawingstate={drawingstate} brushsize={brushsize} erasersize={erasersize} realtime={realtime}\n\t\t\t\t\tbackground={background} fetchImage={fetchImage}/>\n\t\t\t\t\t<Output loading={loading} outputRef={outputRef}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</body>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Buttons({\n  canvasRef,\n  eyeLRef,\n  eyeRRef,\n  noseRef,\n  mouthRef,\n  otherRef\n}) {\n  _s();\n\n  const brushsize = useRef(5);\n  const erasersize = useRef(5);\n  const drawingstate = useRef(true); // Convert Button\n  // const convertCanvas = () => {\n  // \tif (!canvasRef.current) {\n  // \t\treturn;\n  // \t}\n  // \tconst dataURL:string = canvasRef.current.toDataURL(\"image/png\");\n  // }\n  // Clear Button\n\n  const clearCanvas = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n  }; // Brush bar handling\n\n\n  const handleBrush = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    brushsize.current = +size;\n  }; // Eraser bar handling\n\n\n  const handleEraser = event => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const size = event.target.value;\n    erasersize.current = +size;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttonblocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Brush size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"paintRange\",\n        min: \"0.1\",\n        max: \"5\",\n        value: \"2.5\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Paint size : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"eraseRange\",\n        min: \"0.1\",\n        max: \"5\",\n        value: \"2.5\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n      onClick: clearCanvas,\n      children: \"Real Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n      onClick: clearCanvas,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n      onClick: clearCanvas,\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Buttons, \"tgIN3Cvr9BSOMbfjHALHE9nf/9Q=\");\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/Users/chaeyounglim/Desktop/project-canvas-frontend/src/buttons/Buttons.tsx"],"names":["useRef","Buttons","canvasRef","eyeLRef","eyeRRef","noseRef","mouthRef","otherRef","brushsize","erasersize","drawingstate","clearCanvas","current","canvas","getContext","clearRect","width","height","handleBrush","event","size","target","value","handleEraser"],"mappings":"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","sourcesContent":["import { useRef, useState, useCallback, useEffect } from 'react';\nimport '../styles/styles.css';\n\ninterface InputProps {\n\tcanvasRef: React.RefObject<HTMLCanvasElement>;\n\teyeLRef: React.MutableRefObject<number>;\n\teyeRRef: React.MutableRefObject<number>;\n\tnoseRef: React.MutableRefObject<number>;\n\tmouthRef: React.MutableRefObject<number>;\n\totherRef: React.MutableRefObject<number>;\n}\n\nfunction Buttons({canvasRef, eyeLRef, eyeRRef, noseRef, mouthRef, otherRef} : InputProps) {\n\tconst brushsize = useRef<number>(5);\n\tconst erasersize = useRef<number>(5);\n\tconst drawingstate = useRef<Boolean>(true);\n\n\t// Convert Button\n\t// const convertCanvas = () => {\n\t// \tif (!canvasRef.current) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst dataURL:string = canvasRef.current.toDataURL(\"image/png\");\n\t// }\n\n\t// Clear Button\n\tconst clearCanvas = () => {\n\t\tif (!canvasRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst canvas: HTMLCanvasElement = canvasRef.current;\n\t\tcanvas.getContext('2d')!!.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t// Brush bar handling\n\tconst handleBrush = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst size:string = event.target.value;\n\t\tbrushsize.current = +size;\n\t}\n\n\t// Eraser bar handling\n\tconst handleEraser = (event: React.ChangeEvent<HTMLInputElement>) : number | undefined => {\n\t\tif (!canvasRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst size:string = event.target.value;\n\t\terasersize.current = +size;\n\t}\n\n\treturn (\n\t\t<div className='Buttons'>\n\t\t\t<div className='Buttonblocks'>\n\t\t\t\t<span> Brush size : </span>\n\t\t\t\t<input type=\"range\" id=\"paintRange\" min=\"0.1\" max=\"5\" value=\"2.5\" step=\"0.1\" />\n\t\t\t\t<span> Paint size : </span>\n\t\t\t\t<input type=\"range\" id=\"eraseRange\" min=\"0.1\" max=\"5\" value=\"2.5\" step=\"0.1\" />\n\t\t\t</div>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\tReal Time\n\t\t\t</button>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\tConvert\n\t\t\t</button>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\tClear\n\t\t\t</button>\n\t\t\t<button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={clearCanvas}>\n\t\t\tUndo\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}
[2021-12-22 17:28:53,540] {taskinstance.py:1035} INFO - Dependencies all met for <TaskInstance: data_pipeline1.super_resolution scheduled__2021-12-20T00:19:00+00:00 [queued]>
[2021-12-22 17:28:53,544] {taskinstance.py:1035} INFO - Dependencies all met for <TaskInstance: data_pipeline1.super_resolution scheduled__2021-12-20T00:19:00+00:00 [queued]>
[2021-12-22 17:28:53,544] {taskinstance.py:1241} INFO - 
--------------------------------------------------------------------------------
[2021-12-22 17:28:53,544] {taskinstance.py:1242} INFO - Starting attempt 1 of 4
[2021-12-22 17:28:53,544] {taskinstance.py:1243} INFO - 
--------------------------------------------------------------------------------
[2021-12-22 17:28:53,553] {taskinstance.py:1262} INFO - Executing <Task(BashOperator): super_resolution> on 2021-12-20 00:19:00+00:00
[2021-12-22 17:28:53,557] {standard_task_runner.py:52} INFO - Started process 23974 to run task
[2021-12-22 17:28:53,561] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'data_pipeline1', 'super_resolution', 'scheduled__2021-12-20T00:19:00+00:00', '--job-id', '105', '--raw', '--subdir', '/home/myamya/project/dockers/airflow/dags/hello_world.py', '--cfg-path', '/tmp/tmpjc5pionr', '--error-file', '/tmp/tmpe7ypr7jy']
[2021-12-22 17:28:53,561] {standard_task_runner.py:77} INFO - Job 105: Subtask super_resolution
[2021-12-22 17:28:53,606] {logging_mixin.py:109} INFO - Running <TaskInstance: data_pipeline1.super_resolution scheduled__2021-12-20T00:19:00+00:00 [running]> on host myamya
[2021-12-22 17:28:53,634] {taskinstance.py:1412} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=yangjae
AIRFLOW_CTX_DAG_ID=data_pipeline1
AIRFLOW_CTX_TASK_ID=super_resolution
AIRFLOW_CTX_EXECUTION_DATE=2021-12-20T00:19:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2021-12-20T00:19:00+00:00
[2021-12-22 17:28:53,634] {subprocess.py:62} INFO - Tmp dir root location: 
 /tmp
[2021-12-22 17:28:53,634] {subprocess.py:74} INFO - Running command: ['bash', '-c', 'docker run -it -v /home/myamya/project/image_files/:/home/myamya/project/image_files/ sure:0.3 /bin/bash /home/myamya/project/init.sh ']
[2021-12-22 17:28:53,639] {subprocess.py:85} INFO - Output:
[2021-12-22 17:28:55,228] {subprocess.py:89} INFO - /opt/conda/lib/python3.8/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729096996/work/c10/cuda/CUDAFunctions.cpp:100.)
[2021-12-22 17:28:55,229] {subprocess.py:89} INFO -   return torch._C._cuda_getDeviceCount() > 0
[2021-12-22 17:28:56,244] {subprocess.py:89} INFO - Downloading: "https://github.com/xinntao/facexlib/releases/download/v0.1.0/detection_Resnet50_Final.pth" to /opt/conda/lib/python3.8/site-packages/facexlib/weights/detection_Resnet50_Final.pth
[2021-12-22 17:28:56,244] {subprocess.py:89} INFO - 
[2021-12-22 17:28:59,368] {subprocess.py:89} INFO -   0% 0.00/104M [00:00<?, ?B/s]  0% 200k/104M [00:00<00:53, 2.03MB/s]  1% 1.03M/104M [00:00<00:41, 2.63MB/s]  3% 3.25M/104M [00:00<00:29, 3.57MB/s]  8% 8.34M/104M [00:00<00:20, 4.90MB/s] 13% 13.7M/104M [00:00<00:14, 6.75MB/s] 17% 17.8M/104M [00:00<00:10, 9.03MB/s] 21% 21.5M/104M [00:00<00:07, 11.7MB/s] 25% 25.6M/104M [00:00<00:05, 15.0MB/s] 28% 29.5M/104M [00:00<00:04, 18.5MB/s] 32% 33.6M/104M [00:01<00:03, 22.3MB/s] 36% 37.6M/104M [00:01<00:02, 26.0MB/s] 40% 41.7M/104M [00:01<00:02, 29.4MB/s] 44% 45.9M/104M [00:01<00:01, 32.7MB/s] 48% 49.9M/104M [00:01<00:01, 34.8MB/s] 52% 54.2M/104M [00:01<00:01, 37.3MB/s] 56% 58.3M/104M [00:01<00:01, 38.9MB/s] 60% 62.5M/104M [00:01<00:01, 40.2MB/s] 64% 66.8M/104M [00:01<00:00, 41.7MB/s] 68% 71.0M/104M [00:01<00:00, 41.9MB/s] 72% 75.4M/104M [00:02<00:00, 43.0MB/s] 76% 79.6M/104M [00:02<00:00, 43.2MB/s] 80% 83.9M/104M [00:02<00:00, 43.7MB/s] 84% 88.2M/104M [00:02<00:00, 43.6MB/s] 89% 92.7M/104M [00:02<00:00, 44.5MB/s] 93% 97.1M/104M [00:02<00:00, 45.2MB/s] 97% 101M/104M [00:02<00:00, 44.7MB/s] 100% 104M/104M [00:02<00:00, 40.0MB/s]
[2021-12-22 17:28:59,503] {subprocess.py:89} INFO - Downloading: "https://github.com/TencentARC/GFPGAN/releases/download/v0.2.0/GFPGANCleanv1-NoCE-C2.pth" to /opt/conda/lib/python3.8/site-packages/gfpgan/weights/GFPGANCleanv1-NoCE-C2.pth
[2021-12-22 17:28:59,503] {subprocess.py:89} INFO - 
[2021-12-22 17:29:09,211] {subprocess.py:89} INFO -   0% 0.00/332M [00:00<?, ?B/s]  0% 232k/332M [00:00<02:45, 2.10MB/s]  1% 1.92M/332M [00:00<02:01, 2.86MB/s]  1% 3.12M/332M [00:00<01:34, 3.67MB/s]  3% 8.80M/332M [00:00<01:07, 5.06MB/s]  4% 14.3M/332M [00:00<00:47, 6.97MB/s]  5% 18.1M/332M [00:00<00:35, 9.27MB/s]  7% 22.4M/332M [00:00<00:26, 12.2MB/s]  8% 26.2M/332M [00:00<00:20, 15.4MB/s]  9% 30.5M/332M [00:00<00:16, 19.2MB/s] 10% 34.5M/332M [00:01<00:13, 22.9MB/s] 12% 38.8M/332M [00:01<00:11, 26.8MB/s] 13% 42.9M/332M [00:01<00:10, 30.2MB/s] 14% 47.1M/332M [00:01<00:09, 33.2MB/s] 15% 51.3M/332M [00:01<00:08, 36.0MB/s] 17% 55.5M/332M [00:01<00:07, 38.0MB/s] 18% 59.9M/332M [00:01<00:07, 40.1MB/s] 19% 64.1M/332M [00:01<00:06, 41.1MB/s] 21% 68.5M/332M [00:01<00:06, 42.5MB/s] 22% 72.8M/332M [00:01<00:06, 42.9MB/s] 23% 77.2M/332M [00:02<00:06, 44.1MB/s] 25% 81.6M/332M [00:02<00:05, 44.2MB/s] 26% 86.0M/332M [00:02<00:05, 44.8MB/s] 27% 90.4M/332M [00:02<00:05, 45.2MB/s] 29% 94.8M/332M [00:02<00:05, 45.5MB/s] 30% 99.3M/332M [00:02<00:05, 46.0MB/s] 31% 104M/332M [00:02<00:05, 46.0MB/s]  33% 108M/332M [00:02<00:05, 46.5MB/s] 34% 113M/332M [00:02<00:04, 46.4MB/s] 35% 117M/332M [00:02<00:04, 46.9MB/s] 37% 122M/332M [00:03<00:04, 46.1MB/s] 38% 127M/332M [00:03<00:04, 47.2MB/s] 39% 131M/332M [00:03<00:04, 47.4MB/s] 41% 136M/332M [00:03<00:04, 47.5MB/s] 42% 140M/332M [00:03<00:04, 47.7MB/s] 44% 145M/332M [00:03<00:04, 47.8MB/s] 45% 150M/332M [00:03<00:03, 48.1MB/s] 46% 154M/332M [00:03<00:03, 47.9MB/s] 48% 159M/332M [00:03<00:03, 46.3MB/s] 49% 163M/332M [00:04<00:04, 44.0MB/s] 50% 167M/332M [00:04<00:04, 40.7MB/s] 52% 171M/332M [00:04<00:04, 38.8MB/s] 53% 175M/332M [00:04<00:04, 37.5MB/s] 54% 179M/332M [00:04<00:04, 37.0MB/s] 55% 182M/332M [00:04<00:04, 36.5MB/s] 56% 186M/332M [00:04<00:04, 36.4MB/s] 57% 189M/332M [00:04<00:04, 36.2MB/s] 58% 193M/332M [00:04<00:04, 36.4MB/s] 59% 196M/332M [00:04<00:03, 36.4MB/s] 60% 200M/332M [00:05<00:03, 36.6MB/s] 61% 203M/332M [00:05<00:03, 36.6MB/s] 62% 207M/332M [00:05<00:03, 36.7MB/s] 63% 211M/332M [00:05<00:03, 37.0MB/s] 64% 214M/332M [00:05<00:03, 37.0MB/s] 66% 218M/332M [00:05<00:03, 37.5MB/s] 67% 221M/332M [00:05<00:03, 37.6MB/s] 68% 225M/332M [00:05<00:02, 37.6MB/s] 69% 229M/332M [00:05<00:02, 37.8MB/s] 70% 232M/332M [00:05<00:02, 37.9MB/s] 71% 236M/332M [00:06<00:02, 38.3MB/s] 72% 240M/332M [00:06<00:02, 38.3MB/s] 73% 243M/332M [00:06<00:02, 38.5MB/s] 74% 247M/332M [00:06<00:02, 38.5MB/s] 75% 251M/332M [00:06<00:02, 38.6MB/s] 77% 255M/332M [00:06<00:02, 38.9MB/s] 78% 258M/332M [00:06<00:01, 39.0MB/s] 79% 262M/332M [00:06<00:01, 39.3MB/s] 80% 266M/332M [00:06<00:01, 39.3MB/s] 81% 270M/332M [00:06<00:01, 39.5MB/s] 82% 274M/332M [00:07<00:01, 39.6MB/s] 83% 277M/332M [00:07<00:01, 39.7MB/s] 85% 281M/332M [00:07<00:01, 39.8MB/s] 86% 285M/332M [00:07<00:01, 39.8MB/s] 87% 289M/332M [00:07<00:01, 40.0MB/s] 88% 293M/332M [00:07<00:01, 40.0MB/s] 89% 297M/332M [00:07<00:00, 40.1MB/s] 90% 300M/332M [00:07<00:00, 40.1MB/s] 92% 304M/332M [00:07<00:00, 40.2MB/s] 93% 308M/332M [00:07<00:00, 40.2MB/s] 94% 312M/332M [00:08<00:00, 40.4MB/s] 95% 316M/332M [00:08<00:00, 39.8MB/s] 96% 320M/332M [00:08<00:00, 40.3MB/s] 97% 324M/332M [00:08<00:00, 40.0MB/s] 99% 328M/332M [00:08<00:00, 40.5MB/s]100% 332M/332M [00:08<00:00, 40.9MB/s]100% 332M/332M [00:08<00:00, 40.4MB/s]
[2021-12-22 17:29:09,373] {subprocess.py:89} INFO - Testing 0 2264
[2021-12-22 17:29:09,481] {subprocess.py:89} INFO - /opt/conda/lib/python3.8/site-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details.
[2021-12-22 17:29:09,481] {subprocess.py:89} INFO -   warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
[2021-12-22 17:29:14,118] {subprocess.py:93} INFO - Command exited with return code 0
[2021-12-22 17:29:14,132] {taskinstance.py:1270} INFO - Marking task as SUCCESS. dag_id=data_pipeline1, task_id=super_resolution, execution_date=20211220T001900, start_date=20211222T082853, end_date=20211222T082914
[2021-12-22 17:29:14,172] {local_task_job.py:154} INFO - Task exited with return code 0
[2021-12-22 17:29:14,210] {local_task_job.py:264} INFO - 1 downstream tasks scheduled from follow-on schedule check
